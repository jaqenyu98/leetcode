class Solution {
public:
    string sortString(string s) {
        string rst;
        int m[26] = {0};
        for(auto x: s)
            m[x-'a'] += 1;
        while(rst.size()<s.size())
        {
            for(int i=0; i<26; ++i)
            {
                if(m[i]!=0)
                {
                    rst+=i+'a';
                    --m[i];
                }
            }
            for(int j=25; j>=0; --j)
            {
                if(m[j]!=0)
                {
                    rst+=j+'a';
                    --m[j];
                }
            }
        }
        return rst;       
    }
};
//数组代替map

class Solution {
public:
    string sortString(string s) {
        string rst;
        map<char, int> omap;
        for (auto x : s)
            omap[x] += 1;
        while (rst.size() < s.size())
        {
            for (auto it = omap.begin(); it != omap.end(); ++it)
            {
                if (it->second > 0)
                {
                    rst += it->first;
                    --it->second;
                }
            }
            for (auto rit = omap.rbegin(); rit != omap.rend(); ++rit)
            {
                if (rit->second > 0)
                {
                    rst += rit->first;
                    --rit->second;
                }
            }
        }
        return rst;
    }
};
//map计数
